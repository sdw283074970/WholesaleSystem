// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WholesaleSystem.Models;

namespace WholesaleSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201003000921_AddedProductDescription")]
    partial class AddedProductDescription
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WholesaleSystem.Models.ImageFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainPicture")
                        .HasColumnType("bit");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductInventoryId")
                        .HasColumnType("int");

                    b.Property<string>("UploadBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductInventoryId");

                    b.ToTable("ImageFiles");
                });

            modelBuilder.Entity("WholesaleSystem.Models.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ImageFileId")
                        .HasColumnType("int");

                    b.Property<string>("OperatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OperationTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductInventoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageFileId");

                    b.HasIndex("ProductInventoryId");

                    b.ToTable("OperationLogs");
                });

            modelBuilder.Entity("WholesaleSystem.Models.ProductInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<float>("CostPrice")
                        .HasColumnType("real");

                    b.Property<int>("Onway")
                        .HasColumnType("int");

                    b.Property<float>("OriginalPrice")
                        .HasColumnType("real");

                    b.Property<int>("Pending")
                        .HasColumnType("int");

                    b.Property<DateTime>("Pi_update_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Product_barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Product_title_en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reserved")
                        .HasColumnType("int");

                    b.Property<float>("SalePrice")
                        .HasColumnType("real");

                    b.Property<int>("Sellable")
                        .HasColumnType("int");

                    b.Property<int>("Shared")
                        .HasColumnType("int");

                    b.Property<int>("Shipped")
                        .HasColumnType("int");

                    b.Property<int>("Sold_share")
                        .HasColumnType("int");

                    b.Property<int>("Unsellable")
                        .HasColumnType("int");

                    b.Property<string>("Warehouse_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_desc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductInventories");
                });

            modelBuilder.Entity("WholesaleSystem.Models.ProductInventoryProductType", b =>
                {
                    b.Property<int>("ProductInventoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ProductInventoryId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("ProductInventoryProductTypes");
                });

            modelBuilder.Entity("WholesaleSystem.Models.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("TypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeLayer")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("WholesaleSystem.Models.ImageFile", b =>
                {
                    b.HasOne("WholesaleSystem.Models.ProductInventory", "ProductInventory")
                        .WithMany("ImageFiles")
                        .HasForeignKey("ProductInventoryId");
                });

            modelBuilder.Entity("WholesaleSystem.Models.OperationLog", b =>
                {
                    b.HasOne("WholesaleSystem.Models.ImageFile", null)
                        .WithMany("OperationLogs")
                        .HasForeignKey("ImageFileId");

                    b.HasOne("WholesaleSystem.Models.ProductInventory", null)
                        .WithMany("OperationLogs")
                        .HasForeignKey("ProductInventoryId");
                });

            modelBuilder.Entity("WholesaleSystem.Models.ProductInventoryProductType", b =>
                {
                    b.HasOne("WholesaleSystem.Models.ProductInventory", "ProductInventory")
                        .WithMany("ProductInventoryProductTypes")
                        .HasForeignKey("ProductInventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WholesaleSystem.Models.ProductType", "ProductType")
                        .WithMany("InventoryProductTypes")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
